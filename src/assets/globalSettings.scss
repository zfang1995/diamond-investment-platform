@charset "UTF-8";

// import modules from library
@import './modules/hotcss/px2rem.scss';
  $designWidth: 750;
@import './modules/normalize-scss/_normalize.scss';
  @include normalize();

// variables
  // color scheme
    $color-unHighlighted: #b2b2b2;
    $color-highlighted: #007cfb;
    $color-normalText: black;
    $color-linkText: #558df4;
    $color-mutedText: #777;

// browser render reset
* {
  box-sizing: border-box;
}
ul, ol {
  list-style-type: none;
  padding-left: 0;
}
input,button,select,textarea {
  outline: none;
  border: none;
  appearance: none;
}
textarea {
  resize: none
}
body {
  -webkit-tap-highlight-color: transparent;
  letter-spacing: 0.09em;
}
// mixins for components
  // progressBar
    @mixin progressBar ($width: 100%) {
      // expected DOM structure:
      // <root>
      //   <.outter>
      //     <.inner />
      //   </.outter>
      // </root>
      height: px2rem(30);
      width: $width;
      padding: 0 5%;
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: px2rem(25);
      color: #2124bd;
      .outter {
        height: px2rem(5);
        margin-right: 5%;
        flex-grow: 1;
        background-color: #bfbfbb;
        .inner {
          height: 100%;
          background-color: #2124bd;
        }
      }
    }
  // buttons
    @mixin button-type1 ($height:88, $width:640) {
      @if (type-of($height) == number) {
        height: px2rem($height);
        line-height: px2rem($height);
        font-size: px2rem($height / 2);
        border-radius: px2rem($height / 2);
      } @else {
        height: #{$height};
        line-height: #{$height};
        font-size: #{$height} / 2;
        border-radius: #{$height} / 2;
      }
      @if (type-of($width)==number) {
        width: px2rem($width);
      } @else {
        width: #{$width};
      }
      background-image: linear-gradient(0deg, #058dcd 0%, #16b2ec 100%), linear-gradient( #ffffff, #ffffff);
      background-blend-mode: normal, normal;
      box-shadow: 0px 3px 6px 0px rgba(5, 32, 32, 0.25);
      text-align: center;
      vertical-align: middle;
      color: white;
      &.disabled {
        background-image: linear-gradient(#999, #999)
      }
    }

    @mixin button-type2 ($height:88, $width:691, $margin: false) {
      margin-top: if($margin, px2rem($height / 2), 0);
      margin-bottom: if($margin, px2rem($height / 2), 0);
      height: px2rem($height);
      width: px2rem($width);
      background-image: linear-gradient(90deg, #2f91da 0%, #1133c8 100%),
      linear-gradient( #e5e5e5, #e5e5e5);
      background-blend-mode: normal, normal;
      border-radius: px2rem($height / 6);
      text-align: center;
      line-height: px2rem($height);
      vertical-align: middle;
      font-size: px2rem($height / 3.5);
      color: white;
    }
    @mixin checkbox-type1 {
      
    }
  // rows
    @mixin row ($rowHeight: 88, $horizontalJustify: space-between) {
      height: px2rem($rowHeight);
      line-height: px2rem($rowHeight);
      vertical-align: middle;
      display: flex;
      justify-content: $horizontalJustify;
      flex-wrap: wrap;
      align-items: center;
      align-content: center;
      width: 100%;
      overflow-y: hidden;
    }
    @mixin row-type1 ($rowHeight:$fontSizeOfBodyText * 2) {
      height: px2rem($rowHeight);
      line-height: px2rem($rowHeight);
      vertical-align: middle;
      display: flex;
      flex-wrap: wrap;
      align-content: center;
      width: 100%;
      overflow-y: hidden;
    }


  // titles
    @mixin title-type1 () {
      @include text-type2() ;
      &::before {
        content: '';
        display: inline-block;
        width: px2rem(35);
        height: px2rem(35);
        background-image: url('./assets/picture/prefixForHeadline.svg');
        margin-right: px2rem(22);
        background-size: cover;
      }
    }
  // text
    @mixin text-type1 ($fontSize: 20) {
      font-size: px2rem($fontSize);
      font-weight: normal;
      font-stretch: normal;
      line-height: px2rem($fontSize * 2);
      vertical-align: middle;
      color: #000000;
    }
    @mixin text-type2 () {
      font-size: px2rem(44);
      font-weight: normal;
      font-stretch: normal;
      line-height: px2rem(88); // letter-spacing: 0px;
      color: #558df4;
    }
    @mixin text-link ($fontSize: 25) {
      font-size: px2rem($fontSize);
      line-height: px2rem($fontSize * 2);
      vertical-align: middle;
      color: #558df4;

    }
  // lines
    @mixin line-type1($lineLength: 100) {
      @include row-type1() ;
      content: '';
      display: block;
      width: 100%;
      padding: 0 percentage(100 - $lineLength);
      height: px2rem(2);
      margin: px2rem(19) 0;
	    background-color: #f4f4f4;
    }

    @mixin line-type2() {
      @include row-type1();
      content: '';
      height: 0;
      margin: px2rem(20) 0;
    }

    @mixin line-atBackground () {
      text-align: center;
      .innerWrap {
        display: inline-block;
        padding: 0 0.9em;
        background-color: inherit;
        color: #aaa;
      }
      position: relative;
      z-index: 1;
      left: 0; right: 0;
      &::before {
        content: '';
        display: block;
        position: absolute;
        z-index: -1;
        height: px2rem(1);
        left: 0; right: 0; top: 0; bottom: 0;
        margin: auto 0;
        background-color: #f4f4f4;
      }
    }
// mixins for layout schemes
  @mixin layoutScheme-type1 ($numberOfColumns, $verticalSpacingBetweenPairs, $heightOfFirstLineElements: 50%) {
    // $verticalSpacingBetweenPairs has 2 values, these are:
    //    space-between | space-around
    display: flex;
    justify-content: flex-start;
    &>* {
      height: 100%;
      display: block;
      flex-basis: 100%;
      min-width: 100% / $numberOfColumns;
      display: flex;
      flex-direction: column;
      justify-content: $verticalSpacingBetweenPairs;
      &>* {
        display: flex;
        justify-content: center;
        width: 100%;
        background-position: center;
        &:first-child {
          height: $heightOfFirstLineElements;
        }
      }
    }
  }
